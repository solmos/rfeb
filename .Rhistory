plot_shotchart <- function(df) {
court <- construct_court()
plt <- ggplot(environment = environment()) +
geom_point(data = df, aes(x, y, color = m), alpha = 0.8) +
geom_path(aes(x, y), size = 0.2, data = court$outer_lines) +
geom_path(aes(x, y), size = 0.2, data = court$paint) +
geom_path(aes(x, y), size = 0.2, data = court$ft_circle) +
geom_path(aes(x, y), size = 0.2, data = court$arc3) +
coord_fixed() +
theme_void() +
theme(panel.background = element_rect(fill = "whitesmoke"))
plt
}
construct_court <- function() {
outer_lines <- data.frame(
x = c(0, 0, 1500, 1500, 0),
y = c(0, 1400, 1400, 0, 0),
type = "Outer lines"
)
paint <- data.frame(
x = c(750 - 175, 750 - 175, 750 + 175, 750 + 175),
y = c(0, 580, 580, 0),
type = "Paint"
)
ft_circle <- data.frame(
get_arc_df(x0 = 750, y0 = 580, r = 175),
type = "FT circle"
)
upper_arc3 <- data.frame(
get_arc_df(x0 = 750, y0 = 157.5, r = 625, start = 0, stop = pi),
type = "Upper arc"
)
left_corner3 <- data.frame(
x = c(125, 125),
y = c(0, 157.5),
type = "Left corner 3"
)
right_corner3 <- data.frame(
x = c(1500 - 125, 1500 - 125),
y = c(157.5, 0),
type = "Right corner 3"
)
arc3 <- rbind(right_corner3, upper_arc3, left_corner3)
court <- list(outer_lines, paint, ft_circle, arc3)
court
}
construct_arc <- function(x0, y0, r, start, stop) {
by <- ifelse(start <= stop, 0.01, -0.01)
theta <- seq(start, stop, by)
x <- x0 + r * cos(theta)
y <- y0 + r * sin(theta)
data.frame(x, y)
}
extract_shots <- function(game_ids) {
# Scrape the data from Baloncesto en Vivo ====
base_api <- "http://baloncestoenvivo.feb.es/api/ShotChart/"
game_apis <- paste0(base_api, game_ids)
api_requests <- lapply(game_apis, httr::GET)
### ADD WARNING FOR STATUS
json_list <- lapply(api_requests, httr::content, as = "text",
encoding = "UTF-8")
data_list <- lapply(json_list, jsonlite::fromJSON)
# Wrangle the data ====
# We only want the shot data.
shots_list <- lapply(data_list, function(x) x$SHOTCHART$SHOTS)
# Specify the team names as factor levels of team variable instead of 0s and 1s.
team_names_levels <- lapply(data_list, function(x) x$SHOTCHART$TEAM$name)
team_ids_levels <- lapply(data_list, function(x) x$SHOTCHART$TEAM$id)
# We need to assign the two team factor levels to variable team of
## each element (i.e. game) of our list.
assign_team_names <- function(x, y) {
factor(as.numeric(x$team), labels = y)
}
team_names_list <- mapply(assign_team_names,
shots_list, team_names_levels)
# Convert list into a single vector that we will append to our final data frame.
team_names_character_list <- lapply(team_names_list, as.character)
team_names_vector <- do.call("c", team_names_character_list)
team_names_to_append <- as.factor(team_names_vector)
# Create variable identifying the game before merging all elements/games of
## our list into one big data frame
rows_per_game <- sapply(shots_list, nrow)
ids_to_append <- rep(game_ids, rows_per_game)
shots_raw <- do.call("rbind", shots_list)
shots_raw$game <- ids_to_append
shots_raw$team <- team_names_to_append
shots_raw
}
construct_court <- function() {
outer_lines <- data.frame(
x = c(0, 0, 1500, 1500, 0),
y = c(0, 1400, 1400, 0, 0),
type = "Outer lines"
)
paint <- data.frame(
x = c(750 - 175, 750 - 175, 750 + 175, 750 + 175),
y = c(0, 580, 580, 0),
type = "Paint"
)
ft_circle <- data.frame(
construct_arc(x0 = 750, y0 = 580, r = 175),
type = "FT circle"
)
upper_arc3 <- data.frame(
construct_arc(x0 = 750, y0 = 157.5, r = 625, start = 0, stop = pi),
type = "Upper arc"
)
left_corner3 <- data.frame(
x = c(125, 125),
y = c(0, 157.5),
type = "Left corner 3"
)
right_corner3 <- data.frame(
x = c(1500 - 125, 1500 - 125),
y = c(157.5, 0),
type = "Right corner 3"
)
arc3 <- rbind(right_corner3, upper_arc3, left_corner3)
court <- list(outer_lines, paint, ft_circle, arc3)
court
}
game_ids <- 2010208:2010216
x <- extract_shots(game_ids)
x <- extract_shots(game_ids)
plot_shotchart(x)
construct_court <- function() {
outer_lines <- data.frame(
x = c(0, 0, 1500, 1500, 0),
y = c(0, 1400, 1400, 0, 0),
type = "Outer lines"
)
paint <- data.frame(
x = c(750 - 175, 750 - 175, 750 + 175, 750 + 175),
y = c(0, 580, 580, 0),
type = "Paint"
)
ft_circle <- data.frame(
construct_arc(x0 = 750, y0 = 580, r = 175, start = 0, stop = 2 * pi),
type = "FT circle"
)
upper_arc3 <- data.frame(
construct_arc(x0 = 750, y0 = 157.5, r = 625, start = 0, stop = pi),
type = "Upper arc"
)
left_corner3 <- data.frame(
x = c(125, 125),
y = c(0, 157.5),
type = "Left corner 3"
)
right_corner3 <- data.frame(
x = c(1500 - 125, 1500 - 125),
y = c(157.5, 0),
type = "Right corner 3"
)
arc3 <- rbind(right_corner3, upper_arc3, left_corner3)
court <- list(outer_lines, paint, ft_circle, arc3)
court
}
plot_shotchart(x)
library(ggplot2)
plot_shotchart(x)
View(x)
construct_arc(0, 0, 1, 0, 2 * pi)
c <- construct_court()
str(c)
construct_court <- function() {
outer_lines <- data.frame(
x = c(0, 0, 1500, 1500, 0),
y = c(0, 1400, 1400, 0, 0),
type = "Outer lines"
)
paint <- data.frame(
x = c(750 - 175, 750 - 175, 750 + 175, 750 + 175),
y = c(0, 580, 580, 0),
type = "Paint"
)
ft_circle <- data.frame(
construct_arc(x0 = 750, y0 = 580, r = 175, start = 0, stop = 2 * pi),
type = "FT circle"
)
upper_arc3 <- data.frame(
construct_arc(x0 = 750, y0 = 157.5, r = 625, start = 0, stop = pi),
type = "Upper arc"
)
left_corner3 <- data.frame(
x = c(125, 125),
y = c(0, 157.5),
type = "Left corner 3"
)
right_corner3 <- data.frame(
x = c(1500 - 125, 1500 - 125),
y = c(157.5, 0),
type = "Right corner 3"
)
arc3 <- rbind(right_corner3, upper_arc3, left_corner3)
court <- list(outer_lines = outer_lines, paint = paint,
ft_circle = ft_circle, arc3 = arc3)
court
}
construct_arc <- function(x0, y0, r, start, stop) {
by <- ifelse(start <= stop, 0.01, -0.01)
theta <- seq(start, stop, by)
x <- x0 + r * cos(theta)
y <- y0 + r * sin(theta)
data.frame(x, y)
}
plot_shotchart <- function(df) {
court <- construct_court()
plt <- ggplot() +
geom_point(data = df, aes(x, y, color = m), alpha = 0.8) +
geom_path(aes(x, y), size = 0.2, data = court$outer_lines) +
geom_path(aes(x, y), size = 0.2, data = court$paint) +
geom_path(aes(x, y), size = 0.2, data = court$ft_circle) +
geom_path(aes(x, y), size = 0.2, data = court$arc3) +
coord_fixed() +
theme_void() +
theme(panel.background = element_rect(fill = "whitesmoke"))
plt
}
plot_shotchart <- function(df) {
court <- construct_court()
plt <- ggplot(environment = environment()) +
geom_point(data = df, aes(x, y, color = m), alpha = 0.8) +
geom_path(aes(x, y), size = 0.2, data = court$outer_lines) +
geom_path(aes(x, y), size = 0.2, data = court$paint) +
geom_path(aes(x, y), size = 0.2, data = court$ft_circle) +
geom_path(aes(x, y), size = 0.2, data = court$arc3) +
coord_fixed() +
theme_void() +
theme(panel.background = element_rect(fill = "whitesmoke"))
plt
}
c <- construct_court()
c$outer_lines
plot_shotchart(x)
plot(x$x, x$y)
devtools::load_all(".")
construct_court()
library(usethis)
?use_package
use_package("httr")
use_package("jsonlite")
use_package("ggplot2")
use_package("dplyr")
devtools::load_all(".")
devtools::load_all(".")
game_ids <- 2010208:2010216
x <- extract_shots(game_ids)
usethis::use_package("magrittr")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
x <- extract_shots(game_ids)
View(x)
plot_shotchart(x)
plot_shotchart(x, color = made)
plot_shotchart(x, color = made) + facet_wrap(~game)
library(ggplot2)
plot_shotchart(x, color = made) + facet_wrap(~game)
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
plot_shotchart(x, color = made) + facet_wrap(~game)
devtools::load_all(".")
usethis::use_mit_license("Sergio Olmos Pardo")
